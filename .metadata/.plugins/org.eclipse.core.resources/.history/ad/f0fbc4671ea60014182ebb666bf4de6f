package sikayetvar;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;

import org.eclipse.jetty.client.HttpClient;
import org.eclipse.jetty.client.api.ContentResponse;

import com.google.gson.Gson;

/**
 * @author Emine Izmir This class includes methods named process,
 *         readLinesForUrls, readLinesForInfo, createJson, client, writeFile.
 *
 */
public class Processes {

	private String MAIN_URL = "http://www.sikayetvar.com/sikayetler/";
	private String[] title = new String[10];
	private String[] sikayet = new String[10];
	private String[] sikayetDurumu = new String[10];
	private String[] kullanici = new String[10];
	private String[] firma = new String[10];
	private String[] url = new String[10];

	/**
	 * This method riches methods orderly.
	 * 
	 * @throws Exception
	 */
	public void process() throws Exception {

		client(MAIN_URL);
		readLinesForUrls(url);
		readLinesForInfo(url, title, sikayet, sikayetDurumu, kullanici, firma);
		Complaint[] compObj = new Complaint[10];

		for (int k = 0; k < 10; k++) {
			compObj[k] = new Complaint(title[k], sikayet[k], firma[k],
					sikayetDurumu[k], kullanici[k]);
		}
		createJson(compObj);

	}

	/**
	 * Method reads from file "html.txt" takes address of complaints.
	 * 
	 * @param url
	 *            returns address of 10 complaints.
	 * @throws IOException
	 */
	public void readLinesForUrls(String[] url) throws IOException {
		BufferedReader file = new BufferedReader(new FileReader("html.txt"));
		int s = 0;
		String line;
		while ((line = file.readLine()) != null) {
			int indexfound = line.indexOf("sikayetBaslik");

			if (indexfound > -1) {
				for (int x = 0; x < 3; x++) {
					line = file.readLine();
				}
				url[s] = line.substring(line.indexOf("/") + 1,
						line.indexOf(">") - 1);
				s++;
			}
		}
		file.close();
	}

	/**
	 * Reads informations of final 5 parameter from file which includes html
	 * code of web page.
	 * 
	 * @param url
	 * @param title
	 * @param sikayet
	 * @param sikayetDurumu
	 * @param kullanici
	 * @param firma
	 * @throws Exception
	 */
	public void readLinesForInfo(String[] url, String[] title,
			String[] sikayet, String[] sikayetDurumu, String[] kullanici,
			String[] firma) throws Exception {
		for (int j = 0; j < 10; j++) {
			client("http:/" + url[j] + "/");
			BufferedReader file = new BufferedReader(new FileReader("html.txt"));
			String line;
			while ((line = file.readLine()) != null) {

				int[] index = new int[5];
				index[0] = line.indexOf("sikayetDetayNavigasyon");
				index[1] = line.indexOf("/firma/detay");
				index[2] = line.indexOf("sikayetDetayMetin");
				index[3] = line.indexOf("<b>Åžikayet Durumu :");
				index[4] = line.indexOf("sikayetBilgi");

				if (index[0] > -1) {
					for (int x = 0; x < 12; x++)
						line = file.readLine();

					firma[j] = line.substring(line.indexOf(">") + 1,
							line.indexOf("</a"));
				} else if (index[1] > -1) {
					title[j] = firma[j]
							+ line.substring(line.indexOf("/a>") + 3,
									line.indexOf("</h"));
				} else if (index[2] > -1) {
					line = file.readLine();
					sikayet[j] = line.substring(line.indexOf("</p") + 6);
				} else if (index[3] > -1) {
					line = file.readLine();
					sikayetDurumu[j] = line.substring(
							line.lastIndexOf("</b") + 9, line.indexOf("</f"));
				} else if (index[4] > -1) {

					String partOff = line.substring(line.indexOf("<a") + 3,
							line.indexOf("/a"));
					kullanici[j] = partOff.substring(partOff.indexOf(">") + 1,
							partOff.indexOf("<"));
				}
			}
			file.close();

		}

	}

	/**
	 * creates .json file to record complaints'informations
	 * 
	 * @param compObj
	 *            types Complaint from Complaint class
	 */
	public void createJson(Complaint[] compObj) {
		Gson gson = new Gson();
		String json = gson.toJson(compObj);

		try {
			FileWriter writer = new FileWriter("sikayetler.json");
			writer.write(json);
			writer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

		System.out.println("Json created!");
	}

	/**
	 * Starts HttpClient and takes HtLM code of page
	 * 
	 * @throws Exception
	 */
	public void client(String urlOfPage) throws Exception {
		HttpClient httpClient = new HttpClient();
		httpClient.setFollowRedirects(false);
		httpClient.start();
		ContentResponse response = httpClient.GET(urlOfPage);
		writeFile(response.getContentAsString());
		httpClient.stop();
	}

	/**
	 * Writes the HTML code to a .txt file
	 * 
	 * @param response
	 *            = HTML code of page.
	 * @throws FileNotFoundException
	 * @throws UnsupportedEncodingException
	 */
	public void writeFile(String response) throws FileNotFoundException,
			UnsupportedEncodingException {
		PrintWriter writer = new PrintWriter("html.txt", "UTF-8");
		writer.print(response);
		writer.close();
	}

}
